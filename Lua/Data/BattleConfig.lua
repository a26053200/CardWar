---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/7/25 11:59
---


--刷新点
---@class WavePointInfo
---@class ignore boolean 是否忽略
---@field avatarName string     刷新模型
---@field grid number           所在格子
---@field minNum number         最小刷新数量
---@field maxNum number         最大刷新数量
---@field num number            实际刷新数量
---@field delay number
---@field bornMode WaveBornMode

local BattleConfig = {}

---@return table<number, GridAreaInfo>
function BattleConfig.Get(checkPointName)
    if BattleConfig.Map == nil then
        BattleConfig.Map = {}
        local data = require("Game.Data.Excel.GridBattle")
        for i = 1, #data.db do
            local battle = data.db[i]
            if not battle.ignore then --排除被忽略的
                local areas = BattleConfig.Map[battle.pid] ---@type table<number, GridAreaInfo>
                if areas == nil then
                    areas = {}
                    BattleConfig.Map[battle.pid] = areas
                end
                local areaInfo = areas[battle.areaId] ---@type GridAreaInfo
                if areaInfo == nil then
                    areaInfo = {}
                    areaInfo.areaIndex = battle.areaIndex
                    areaInfo.type = battle.areaType
                    areas[battle.areaId] = areaInfo
                end
                if areaInfo.waves == nil then
                    areaInfo.waves = {}
                end
                local waveInfo = areaInfo.waves[battle.waveIndex] ---@type GridWaveInfo
                if waveInfo == nil then
                    waveInfo = {}
                    waveInfo.waveMode = battle.waveMode
                    --waveInfo.enterScript = battle.enterScript
                    --waveInfo.exitScript = battle.exitScript
                    areaInfo.waves[battle.waveIndex] = waveInfo
                end
                if waveInfo.wavePoints == nil then
                    waveInfo.wavePoints = {} ---@type table<number,WavePointInfo>
                end

                table.insert(waveInfo.wavePoints, {
                    bornMode = battle.bornMode,
                    --delay = battle.delay,
                    grid = battle.grid,
                    avatarName = battle.avatarName,})
            end
        end
    end
    local areas = BattleConfig.Map[checkPointName]
    if areas == nil then
        logError(string.format("There is not checkPoint areas named %s!", checkPointName))
    end
    return areas
end

--获取该章节的战斗区域信息
---@return table<number, GridAreaInfo>
function BattleConfig.GetAreas(checkPointName)
    local areas = BattleConfig.Get(checkPointName)
    return areas
end

return BattleConfig