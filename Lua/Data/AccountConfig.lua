---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/5/6 17:35
---


---@class AccountInfo
---@field id string
---@field name string
---@field group string 所属分组
---@field type number
---@field gridSelect string
---@field targetMode string
---@field accountPoint number
---@field damageRatio number

local AccountConfig = {}

---@param group string
---@return table<number, AccountInfo>
function AccountConfig.GetList(group)
    if AccountConfig.map == nil then
        local map = require("Game.Data.Excel.Account")
        AccountConfig.map = map
        ---@param info AccountInfo
        for _, info in pairs(map.table) do
            if isString(info.param) then
                info.param = Tool.String2Map(info.param)
            end
            local list = map[info.group]
            if list == nil then
                list = {}
                map[info.group] = list
            end
            table.insert(list, info)
        end
    end
    local list = AccountConfig.map[group] ---@type table<number, AccountInfo>
    if list == nil then
        list = {}
        logError(string.format("There is not account list info named %s!", group))
    end
    return list
end

---@return AccountInfo
function AccountConfig.Get(name)
    if AccountConfig.data == nil then
        AccountConfig.data = require("Game.Data.Excel.Account")
    end
    local info = AccountConfig.data.Get(name) ---@type AccountInfo
    if info == nil then
        logError(string.format("There is not account info named %s!", name))
    end
    if isString(info.param) then
        info.param = Tool.String2Map(info.param)
    end
    return info
end

return AccountConfig