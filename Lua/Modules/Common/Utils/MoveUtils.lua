---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/12/11 11:24
---

local MoveUtils = {}


-- 获取空格子
---@param grid AStar.Grid
---@param points table<number, Framework.AroundPoint>
---@return Framework.AroundPoint
function MoveUtils.GetAroundEmptyPoint(grid, points)
    local point
    local randoms = Tool.GetRandomArray(points.Length)
    for i = 0, points.Length - 1 do
        if not World.IsOverlapHeroNode(grid:NodeFromWorldPoint(points[randoms[i + 1] - 1].pos)) then
            point = points[i]
        end
    end
    return point
end


-- 获取目标点数组最近的格子节点
---@param src Module.World.Items.Avatar
---@param points table<number, Framework.AroundPoint>
---@return Framework.AroundPoint
function MoveUtils.GetNearestPoint(src, points, checkOverlap)
    local point
    local minDistance = Mathf.Infinity
    for i = 0, points.Length - 1 do
        if points[i].walkable and (not checkOverlap or points[i].owner <= 0) then
            local distance = Vector3.Distance(src.transform.position, points[i].pos)
            if distance < minDistance then
                minDistance = distance
                point = points[i]
            end
        end
    end
    return point
end

-- 获取目标点数组最近的格子节点
---@param src Module.World.Items.Avatar
---@param points table<number, Framework.AroundPoint>
---@return Framework.AroundPoint
function MoveUtils.GetAroundNearestPoint(src, points)
    if points.Length == 0 then
        return nil
    end
    local point
    for i = 0, points.Length - 1 do
        if points[i].owner == src.avatarInfo.sid then
            point = points[i]
            break
        end
    end
    if not point then-- 优先取不重叠的格子
        point = MoveUtils.GetNearestPoint(src, points,true)
    end
    if not point then-- 没有不重叠的格子再取最近的格子
        point = MoveUtils.GetNearestPoint(src, points,false)
    end
    return point
end

function MoveUtils.isArrived(srcPos, nextPos, delta)
    local distance = Vector3.Distance(nextPos, srcPos)
    if distance <= delta then
        return true
    else
        return false
    end
end

--只需要获得路径
function MoveUtils.OnlyRequestPath(srcPos, dstPos, callback)
    local aStar = AStar.PathRequestManager
    aStar.RequestPath(srcPos, dstPos,5, 10, false,function (path)
        local pathList = {}
        for i = 0, path.lookPoints.Length - 1 do
            table.insert(pathList, path.lookPoints[i])
        end
        callback(pathList)
    end,function ()
        callback()
    end)
end

return MoveUtils