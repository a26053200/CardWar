---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/7/26 17:41
--- 贝塞尔曲线工具函数
---

local BezierUtils = {}

function BezierUtils.Mul(num, vec3)
    return Vector3.New(num * vec3.x, num * vec3.y, num * vec3.z)
end
---@return UnityEngine.Vector3
function BezierUtils.GetBezierPoint(t, p0, p1, p2, p3)
    local u = 1 - t;
    local tt = t * t;
    local uu = u * u;
    local uuu = uu * u
    local ttt = tt * t

    local p = BezierUtils.Mul(uuu, p0);
    p = Vector3.Add(p, BezierUtils.Mul(3 * uu * t, p1))
    p = Vector3.Add(p, BezierUtils.Mul(3 * u * tt, p2))
    p = Vector3.Add(p, BezierUtils.Mul(ttt, p3))
    return p
end

---@return table<number, UnityEngine.Vector3>
function BezierUtils.GetBezierPointPath(startPoint, contrilPoint0, contrilPoint1, endPoint, seqmentNum)
    local path = {}
    for i = 1, seqmentNum do
        local t = i / seqmentNum;
        local pixel = BezierUtils.GetBezierPoint(t, startPoint, contrilPoint0, contrilPoint1, endPoint)
        table.insert(path, pixel)
        --log("Bezier "..pixel.x)
    end
    return path
end

---@return table<number, UnityEngine.Vector3>
function BezierUtils.GetBezierPath(startPos, tagPos, cp0, cp1, seqmentNum)
    return BezierUtils.GetBezierPointPath(startPos, cp0, cp1, tagPos, seqmentNum)
end

---@return table<number, UnityEngine.Vector3>
function BezierUtils.GetBezierPathByOffset(startPos, tagPos, offsetCp0, offsetCp1, seqmentNum)
    local cp0 = Vector3.New(startPos.x + offsetCp0.x, startPos.y + offsetCp0.y, startPos.z)
    local cp1 = Vector3.New(startPos.x + offsetCp1.x, startPos.y + offsetCp1.y, startPos.z)
    return BezierUtils.GetBezierPointPath(startPos, cp0, cp1, tagPos, seqmentNum)
end

-- Y轴 跳跃曲线
---@return table<number, UnityEngine.Vector3>
---@param startPos UnityEngine.Vector3
---@param tagPos UnityEngine.Vector3
---@param d number 跳跃距离 整个距离为3 * d
function BezierUtils.GetJumpPath(startPos, tagPos, h, d, seqmentNum)
    local dir = tagPos - startPos
    dir = dir.normalized
    local cp0 = startPos + dir * d
    cp0.y = cp0.y + h
    local cp1 = startPos + dir * d * 2
    cp1.y = cp1.y + h
    return BezierUtils.GetBezierPointPath(startPos, cp0, cp1, tagPos, seqmentNum)
end
-- Y轴 跳跃曲线
---@return table<number, UnityEngine.Vector3>
---@param startPos UnityEngine.Vector3
---@param tagPos UnityEngine.Vector3
---@param d number 跳跃距离 整个距离为3 * d
function BezierUtils.GetJumpPath1(startPos, tagPos, h, d, seqmentNum)
    local dir = tagPos - startPos
    dir = dir.normalized
    local cp0 = startPos + dir * d * 1.3
    cp0.y = cp0.y + h
    return BezierUtils.GetBezierPointPath(startPos, cp0, tagPos, tagPos, seqmentNum)
end
return BezierUtils