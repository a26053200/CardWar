---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/1/11 12:08
---
local Tool = {}
local json = require("cjson")

function Tool.String2Table(jsonStr)
    if jsonStr == nil or jsonStr == "" then
        return {}
    else
        return json.decode(jsonStr)
    end
end

---@return table<string,string>
function Tool.String2Map(str,delimiter,delimiter2)
    if str == nil or str == "" then
        return {}
    else
        delimiter = delimiter or ","
        delimiter2 = delimiter2 or "="
        local split = string.split(str,delimiter)
        local map = {}
        for i = 1, #split do
            local split2 = string.split(split[i],delimiter2)
            if isNumber(tonumber(split2[2])) then
                map[split2[1]] = tonumber(split2[2])
            elseif isBoolean(split2[2]) then
                map[split2[1]] = string.lower(split2[2]) == "true"
            else
                map[split2[1]] = split2[2]
            end
        end
        return map
    end
end

--UI自适应父容器大小
function Tool.AdaptSize(view)
    if view and not isnull(view.gameObject) then
        local rect = GetComponent.RectTransform(view.gameObject)
        if rect then
            rect.localPosition = Vector3.zero
            rect.sizeDelta = Vector3.zero
            rect.anchoredPosition = Vector2.zero
        end
    end
end

---@param callBack Handler
function Tool.OpenWinAni(transform,callBack)
    transform.localScale = Vector3.zero
    transform:DOScale(Vector3.one,0.3):SetEase(DOTween_Enum.Ease.OutBack):OnComplete(function()
        if callBack then
            callBack:Execute()
        end
    end)
end

function Tool.CloseWinAni(transform,callBack)
    transform:DOScale(Vector3.zero, 0.2):SetEase(DOTween_Enum.Ease.InQuad):OnComplete(function()
        if callBack then
            callBack:Execute()
        end
    end)
end

function Tool.ShakeAni(transform, startPos, shakeUpValue, shakeUpTime, shakeDownTime)
    if isnull(transform) then
        return
    end
    transform.localPosition = startPos or Vector3.zero
    local value = shakeUpValue or 10
    local upTime = shakeUpTime or 0.2
    local downTime = shakeDownTime or 0.1
    local move = transform:DOLocalMoveY(transform.localPosition.y + value, upTime):OnComplete(function()
        if isnull(transform) then
            return
        end
        transform:DOLocalMoveY(transform.localPosition.y - value, downTime)
    end)
    return move
end

function Tool.LoopShake(transform, startPos, shakeUpValue, shakeUpTime, shakeDownTime, shakeGapTime)
    local step1Time = shakeUpTime + shakeDownTime
    local shake
     shake = coroutine.start(function()
        while(isnull(transform) == false) do
            Tool.ShakeAni(transform, startPos, shakeUpValue, shakeUpTime, shakeDownTime)
            coroutine.wait(step1Time)
            if isnull(transform) then
                coroutine.stop(shake)
                return
            end
            Tool.ShakeAni(transform, startPos, shakeUpValue, shakeUpTime, shakeDownTime)
            coroutine.wait(shakeGapTime)
        end
    end)
    return shake
end

---ShakeXEffect x 坐标抖动效果
---@param obj table
function Tool.ShakeXEffect(obj)
    if obj == nil then
        return
    end
    local pos = obj.transform.localPosition
    local disX = 3
    local pos_left = pos.x + disX
    local pos_right = pos.x - disX
    local  doTween = obj.transform:DOLocalMoveX(pos_left,0.1):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
        obj.transform:DOLocalMoveX(pos_right,0.1):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
            obj.transform:DOLocalMoveX(pos.x,0.1):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
                Tool.ShakeXEffect(obj)
            end)
        end)
    end):SetLoops(3,DOTween_Enum.LoopType.Yoyo):SetDelay(0.8)
    return doTween
end

---ShakeXEffect2 抖动效果2 间隔0.05秒
---@param obj table
function Tool.ShakeXEffect2(obj)
    if obj == nil then
        return
    end
    local pos = obj.transform.localPosition
    obj.orgPos = pos
    local disX = 5
    local pos_left = pos.x + disX
    local pos_right = pos.x - disX
    obj.transform:DOLocalMoveX(pos_left,0.05):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
        obj.transform:DOLocalMoveX(pos_right,0.05):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
            obj.transform:DOLocalMoveX(pos.x,0.05):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
                Tool.ShakeXEffect2(obj)
            end)
        end)
    end):SetLoops(3,DOTween_Enum.LoopType.Yoyo):SetDelay(0.8)
end

---ShakeXEffect3 抖动效果3 间隔0.05秒
---@param obj table
function Tool.ShakeXEffect3(obj,delay)
    if obj == nil then
        return
    end
    if delay == nil then
        delay = 0.8
    end
    local pos = obj.transform.localPosition
    obj.orgPos = pos
    local disX = 5
    local pos_left = pos.x + disX
    local pos_right = pos.x - disX
    local tween = obj.transform:DOLocalMoveX(pos_left,0.05):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
        obj.transform:DOLocalMoveX(pos_right,0.05):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
            obj.transform:DOLocalMoveX(pos.x,0.05):SetEase(DOTween_Enum.Ease.Linear):OnComplete(function()
                Tool.ShakeXEffect3(obj,1.5)
            end)
        end)
    end):SetLoops(3,DOTween_Enum.LoopType.Yoyo):SetDelay(delay)
end

---ClearShakeXEffect 清理x 坐坐标抖动效果
---@param obj table
function Tool.ClearShakeXEffect(obj)
    if obj then
        obj.transform:DOKill()
        if obj.orgPos then
            obj.transform.localPosition = obj.orgPos
        end
    end
end


-- 灰度材质球
function Tool.GetGrayMat()
    local grayMat = Tool.CreateMaterial("Sprites/Gray","Shaders/Effect/Gray.shader")
    return grayMat
end

-- 创建材质球 需要材质Shader的name和路径 都提供可以提高查找速度
---@param shaderName string
---@param shaderFile string
---@return UnityEngine.Material
function Tool.CreateMaterial(shaderName,shaderFile)
    local shader = Shader.Find(shaderName)
    if shader == nil then
        shader = Res.LoadShader(shaderFile, UILayer.ASSET_GROUP_CORE)
    end
    return Material.New(shader)
end


---@param enabled boolean 当前场景高斯模糊开关
---@param camera UnityEngine.Camera
function Tool.SetCameraGaussianBlur(camera, enabled, rate)
    if isnull(camera) then
        return
    end
    local gloss = camera.gameObject:GetComponent(typeof(Framework.GaussianBlur))
    if enabled then
        if gloss == nil then
            rate = rate == nil and 1 or rate
            gloss = camera.gameObject:AddComponent(typeof(Framework.GaussianBlur))
            gloss.blurRadius = 1.5 * rate
            gloss.downSample = 1
            gloss.iteration = 2
            gloss.material = Tool.CreateMaterial("Custom/GaussianBlur","Shaders/Effect/Gloss_new.shader")
        elseif rate then
            gloss.blurRadius = 1.5 * rate
        end
        gloss.enabled = true
    else
        if gloss ~= nil then
            gloss.enabled = false
        end
    end
end

--线性间隔调用函数
---@return DG.Tweening.DOTween
function Tool.DOTweenFloat(startValue, endValue, duration, setFloatFun, callback, ease, manual)
    local value = startValue
    local function getFunc()
        return value
    end
    local function setFunc(floatValue)
        setFloatFun(floatValue)
        value = floatValue
    end
    local getter = DG.Tweening.Core.DOGetter_float(getFunc)
    local setter = DG.Tweening.Core.DOSetter_float(setFunc)
    if not ease then
        ease = DOTween_Enum.Ease.Linear
    end
    local tween ---@type DG.Tweening.DOTween
    tween = DOTween.To(getter, setter, endValue, duration):SetEase(ease):OnComplete(function ()
        if callback then
            callback(value)
        end
    end)
    if manual then tween:SetUpdate(DG.Tweening.UpdateType.Manual) end
    return tween
end

--线性间隔调用函数 整数
function Tool.DOTweenEaseFun(maxTimes, duration, func, callback, ease)
    local stepTime = duration / maxTimes
    --if stepTime < Time.deltaTime then
    --    error("DOTweenEaseFun duration is too short, it must big than Time.deltaTime:"..Time.deltaTime.." stepTime:"..stepTime)
    --    return
    --end
    local startTime = Time.time
    local lastIndex = -1
    local tween = Tool.DOTweenFloat(0,1,duration,function (value)
        local passTime = Time.time - startTime
        local index = Mathf.Ceil(value * maxTimes)
        if lastIndex ~= index then
            lastIndex = index
            func(lastIndex)
        end
    end, callback, ease)
    return tween
end

--获取一个随机数组
---@return table<number, number>
function Tool.GetRandomArray(n)
    local list = {}
    for i = 1, n do
        table.insert(list, i)
    end
    for i = 1, n do
        local r = math.random(1, n)
        local tmp = list[i]
        list[i] = list[r]
        list[r] = tmp
    end
    return list
end


--字符转化为Vector3
---@return UnityEngine.Vector3
function Tool.ToVector3(str)
    if not StringUtil.IsEmpty(str) then
        local split = string.split(str, ",")
        if #split >= 3 then
            return Vector3.New(tonumber(split[1]), tonumber(split[2]), tonumber(split[3]))
        else
            return Vector3.zero
        end
    else
        return Vector3.zero
    end
end


--字符转化为Vector2
---@return UnityEngine.Vector2
function Tool.ToVector2(str)
    if not StringUtil.IsEmpty(str) then
        local split = string.split(str, ",")
        if #split >= 2 then
            return Vector2.New(tonumber(split[1]), tonumber(split[2]))
        else
            return Vector2.zero
        end
    else
        return Vector2.zero
    end
end

function Tool.FindBoneTrans(trans, boneName)
    for i = 1, trans.childCount do
        local c = trans:GetChild(i - 1)
        if c.name == boneName then
            return c
        else
            local boneTrans = Tool.FindBoneTrans(c, boneName)
            if boneTrans then
                return boneTrans
            end
        end
    end
end

---@param unityScene UnityEngine.SceneManagement.Scene
---@return UnityEngine.Camera
function Tool.GetCamera(unityScene, cameraName)
    cameraName = cameraName or "Main Camera"
    local camObj = sceneMgr:FindRootObjInScene(unityScene, cameraName)
    if isnull(camObj) then
        logError(string.format("This scene [%s]'s camera must named with 'Main Camera' and set to root", unityScene.name))
    end
    return camObj:GetComponent(typeof(UnityEngine.Camera));
end

---@param camera UnityEngine.Camera
---@return UnityEngine.AudioListener
function Tool.GetAudioListener(camera)
    return camera.gameObject:GetComponent(typeof(UnityEngine.AudioListener))
end

---@param unityScene UnityEngine.SceneManagement.Scene
---@return UnityEngine.GameObject
function Tool.GetLightObj(unityScene, lightName)
    lightName = lightName or "Main Camera"
    local lightObj = sceneMgr:FindRootObjInScene(unityScene, lightName)
    if isnull(lightObj) then
        logError(string.format("This scene [%s]'s Light must named with 'Directional Light' and set to root", unityScene.name))
    end
    return lightObj
end

return Tool