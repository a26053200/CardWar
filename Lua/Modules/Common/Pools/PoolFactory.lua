---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/6/25 14:15
---

---@class PoolInfo

---@class Game.Modules.Common.Pools.PoolFactory
local PoolFactory = {}

--统计对象池
---@param poolNumMap table<string,number> avatarName 和 数量的映射
---@return table<number,PoolInfo>
function PoolFactory.CalcPoolNumMap(poolNumMap, avatarName)
    if poolNumMap[avatarName] == nil then
        poolNumMap[avatarName] = 1
    end
end

--统计对象池
---@param poolNumMap table<string,number> avatarName 和 数量的映射
---@return table<number,PoolInfo>
function PoolFactory.CalcPoolInfoMap(poolNumMap)
    local poolInfoMap = {} ---@type table<number, PoolInfo>
    for avatarName, v in pairs(poolNumMap) do
        print("poolInfoMap " .. avatarName)
        table.insert(poolInfoMap, { avatarName = avatarName, initNum = 1})
    end
    return poolInfoMap
end

--获取Avatar的Effect Pool info
---@param effectMaxNums table<string, PoolInfo>
---@param avatarInfo AvatarInfo
---@return table<number, PoolInfo>
function PoolFactory.GetAvatarPool(effectMaxNums,avatarInfo,avatarNum)
    local addEffectNum
    addEffectNum = function(effectName, num)
        if StringUtil.IsEmpty(effectName) then
            return
        end
        local effectInfo = EffectConfig.Get(effectName)
        if effectInfo and not StringUtil.IsEmpty(effectInfo.endEffect) then
            addEffectNum(effectInfo.endEffect, num)
        end
        if effectMaxNums[effectName] == nil then
            effectMaxNums[effectName] = {effectName = effectName, initNum = 0}
        end
        effectMaxNums[effectName].initNum = effectMaxNums[effectName].initNum + num
    end
    addEffectNum(avatarInfo.bornEffect, avatarNum)
    addEffectNum(avatarInfo.deadEffect, avatarNum)
    if not StringUtil.IsEmpty(avatarInfo.skills) then
        local split = string.split(avatarInfo.skills, ",")
        for i = 1, #split do
            local skill = SkillConfig.Get(split[i])
            addEffectNum(skill.effect, avatarNum)
            if skill.accountAction and isTable(skill.accountAction)then
                for _, animEffect in ipairs(skill.accountAction.animEffect) do
                    addEffectNum(animEffect, avatarNum)
                end
            end
            addEffectNum(skill.hitEffect, 10)
            for j = 1, #skill.accounts do
                if not StringUtil.IsEmpty(skill.accounts[j].buffer) then
                    local buffer = BufferConfig.Get(skill.accounts[j].buffer)
                    addEffectNum(buffer.effect, 10)
                end
            end
        end
    end
    return effectMaxNums
end

return PoolFactory