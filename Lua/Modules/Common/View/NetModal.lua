---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/1/27 23:47
---

local UIView = require('Game.Modules.Common.View.UIView')
---@class Game.Modules.Common.View.NetModal : Game.Modules.Common.View.UIView
---@field Show function<msg:string , delay:number>
---@field gameObject UnityEngine.GameObject
---@field text UnityEngine.UI.Text
local NetModal = class("NetModal",UIView)

---@return Game.Modules.Common.View.NetModal
function NetModal.Show()
    if NetModal.single == nil then
        NetModal.single = NetModal.New()
    end
    NetModal.single:DisplayShow()
    return NetModal.single
end

---@param modal Game.Modules.Common.View.NetModal
function NetModal.Hide()
    if NetModal.single ~= nil then
        NetModal.single:DisplayHide()
    end
end

function NetModal:Ctor()
    local layer = vmgr:GetUILayer(UILayer.top)
    NetModal.super.Ctor(self, "Prefabs/UI/Common/NetModal.prefab",layer)
    self.canvas = GetCanvasGroup(self.gameObject:FindChild("Tip"))
    self.tip = self.gameObject:FindChild("Tip")
    self.text = GetText(self.gameObject:FindChild("Tip/Text"))
    self.gameObject:SetActive(false)
end

function NetModal:DisplayShow()
    self.gameObject:SetActive(true)
    self.text.text = "Net working"
    local sequence = self:CreateSequence()
    self.tip.transform.localScale = Vector3.New(1,0,1)
    sequence:Append(self.tip.transform:DOScale(Vector3.one,0.3))
    sequence:AppendCallback(function ()
        self.tween = self.text:DOText("Net working...",0.5,false):SetLoops(-1, LoopType.Restart)
    end)
end

function NetModal:DisplayHide()
    local sequence = self:CreateSequence()
    self.tip.transform.localScale = Vector3.one
    sequence:Append(self.tip.transform:DOScale(Vector3.New(1,0,1),0.3))
    sequence:AppendCallback(function ()
        self.gameObject:SetActive(false)
    end)
end

function NetModal:Dispose()
    NetModal.super.Dispose(self)
    if self.tween then
        self.tween:Kill()
    end
end

return NetModal