---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/1/15 1:48
---

local UIView = require('Game.Modules.Common.View.UIView')
---@class Game.Modules.Common.View.Tips : Game.Modules.Common.View.UIView
---@field Show function<msg:string , delay:number>
---@field gameObject UnityEngine.GameObject
local Tips = class("Tips",UIView)

local DURATION = 0.3
function Tips.Show(msg)
    if Tips.pool == nil then
        local pool = List.New()
        for i = 1, 10 do
            pool:Push(Tips.New())
        end
        Tips.pool = pool
    end
    if Tips.pool:Size() == 0 then
        Tips.pool:Push(Tips.New())
    end
    local tip = Tips.pool:Shift()
    tip:DisplayShow(msg, function ()
        Tips.pool:UnShift(tip)
    end)
end

function Tips:Ctor()
    local layer = vmgr:GetUILayer(UILayer.alert)
    Tips.super.Ctor(self, "Prefabs/UI/Common/Tips.prefab",layer)
    self.canvas = self.gameObject:GetCanvasGroup("")
    self.orgPos = self.gameObject.transform.localPosition
    self.orgPos.y = self.orgPos.y + 50
    self.gameObject.transform.localPosition = self.orgPos
    self.gameObject:SetActive(false)
end

function Tips:DisplayShow(msg,callback)
    self.gameObject:SetActive(true)
    self.gameObject:GetText("Text").text = msg
    local startPos = Vector3.New(self.orgPos.x, self.orgPos.y + 100, self.orgPos.z)
    local holdPos = Vector3.New(self.orgPos.x, self.orgPos.y + 115, self.orgPos.z)
    local hidePos = Vector3.New(self.orgPos.x, self.orgPos.y + 120, self.orgPos.z)
    local endPos = Vector3.New(self.orgPos.x, self.orgPos.y + 160, self.orgPos.z)
    local sequence = DOTween.Sequence()
    self.gameObject.transform.localPosition = startPos
    self.canvas.alpha = 0
    sequence:Append(self.gameObject.transform:DOLocalMove(holdPos, DURATION))
    sequence:Join(self.canvas:DOFade(1, DURATION))
    sequence:Append(self.gameObject.transform:DOLocalMove(hidePos, DURATION * 2))
    sequence:Append(self.gameObject.transform:DOLocalMove(endPos, DURATION))
    sequence:Join(self.canvas:DOFade(0, DURATION):OnComplete(function ()
        self.gameObject:SetActive(false)
        if callback then
            callback()
        end
    end))
end

return Tips