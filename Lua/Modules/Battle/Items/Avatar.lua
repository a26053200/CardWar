---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/5/21 22:49
---

local SceneItemHUD = require("Game.Modules.Battle.Items.SceneItemHUD")
local AnimController = require("Game.Modules.Common.Components.AnimController")
local RenderItem = require('Game.Modules.Battle.Items.RenderItem')

---@class Game.Modules.Battle.Items.Avatar : Game.Modules.Battle.Items.RenderItem
---@field avatarInfo AvatarInfo
---@field behavior Game.Modules.Battle.Behaviors.AvatarBehavior
---@field node AStar.Node
---@field soonNode AStar.Grid 即将拥有的
---@field isWakeup boolean 是否被惊醒
---@field hud Game.Modules.Battle.Items.SceneItemHUD
---@field deadOver boolean 死亡动画播放完毕
---@field isMoving boolean 是否正在移动
local Avatar = class("Game.Modules.Battle.Items.Avatar",RenderItem)

---@param avatarInfo AvatarInfo
function Avatar:Ctor(avatarInfo)
    self.avatarInfo = avatarInfo
    self:ResetAttr()
    Avatar.super.Ctor(self, avatarInfo)
    self.aroundNodes = {}
end

function Avatar:ResetAttr()
    local attr = self.avatarInfo.attr
    local baseAttr = self.avatarInfo.baseAttr
    attr.hpMax = math.random(baseAttr.hpMin, baseAttr.hpMin)
    attr.hp = attr.hpMax
    attr.atk = math.random(baseAttr.atkMin, baseAttr.atkMax)
    attr.def = math.random(baseAttr.defMin, baseAttr.defMax)
    attr.crit = math.random(baseAttr.critMin, baseAttr.critMax)
end

function Avatar:OnLoadedRenderObj()
    Avatar.super.OnLoadedRenderObj(self)
    self.gameObject.name = self.avatarInfo.name .. "_"..self.avatarInfo.id
    self.animCtrl = AnimController.New(self)
    self.hud = SceneItemHUD.New(self)
end

--更新所在格子
function Avatar:UpdateNode()
    self.node = World.grid:NodeFromWorldPoint(self.transform.position)
    --更新周围格子
    for i = 1, 3 do
        self.aroundNodes[i] = AStarTools.GetAroundNodes(World.grid, self.node, i)
    end
end

--获取最近的格子
---@param src Game.Modules.Battle.Items.Avatar
---@return AStar.Node
function Avatar:GetNearestNode(src, d)
    local aroundNode = AStarTools.GetNearestNode(src, self.aroundNodes[d])
    if aroundNode then
        aroundNode.ownerId = src.avatarInfo.id
    end
    return aroundNode.node
end

--是否死亡
function Avatar:IsDead()
    local attr = self.avatarInfo.attr
    return attr.hp == 0
end

---@param callback Handler
function Avatar:PlayIdle(callback)
    self.animCtrl:PlayAnim(self.avatarInfo.animIdle, callback)
end

---@param callback Handler
function Avatar:PlayRun(callback)
    self.animCtrl:PlayAnim(self.avatarInfo.animRun, callback)
end

---@param callback Handler
function Avatar:PlayDead(callback)
    self:OnDead()
    self.animCtrl:PlayAnim(self.avatarInfo.animDead, Handler.New(function()
        self:OnDeadOver()
        callback:Execute()
    end, self))
end

function Avatar:OnDead()
    self.hud:Dispose()
end

function Avatar:OnDeadOver()
    self:SetRenderObjVisible(false)
    self.deadOver = true
end

---@param enable boolean
function Avatar:SetBehaviorEnable(enable)

end

function Avatar:Dispose()
    Avatar.super.Dispose(self)
    if self.hud then
        self.hud:Dispose()
    end
    if self.animCtrl then
        self.animCtrl:Dispose()
    end
end

return Avatar