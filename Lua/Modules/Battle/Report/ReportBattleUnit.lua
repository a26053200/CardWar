---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2020/7/5 0:53
--- 战斗单位
---

---@class Game.Modules.Battle.Report.ReportBattleUnit
---@field battleUnitVo Game.Modules.Battle.Vo.BattleUnitVo
---@field sid number 唯一id
---@field context Game.Modules.Battle.Report.ReportContext
---@field ownerCardVo Game.Modules.Card.Vo.CardVo
---@field currSelectedSkill Game.Modules.Battle.Vo.SkillVo 当前被选中的技能
---@field skills table<number, Game.Modules.Battle.Vo.SkillVo>
---@field layoutIndex number
local ReportBattleUnit = class("Game.Modules.Battle.Report.ReportBattleUnit");

local S_ID = 0

---@param battleUnitVo Game.Modules.Battle.Vo.BattleUnitVo
---@param context Game.Modules.Battle.Report.ReportContext
function ReportBattleUnit:Ctor(battleUnitVo, context)
    S_ID = S_ID + 1
    self.sid = S_ID
    self.context = context
    self.battleUnitVo = battleUnitVo

    self.skills = battleUnitVo.skills
    self.canUseList = List.New()
    self.currTargetAttackNum = 0

    self.debugName = self.battleUnitVo.battleUnitInfo.name .. "_" .. self.battleUnitVo.camp .. "-" .. self.battleUnitVo.layoutIndex
end

---@param s1 Game.Modules.Battle.Vo.SkillVo
---@param s2 Game.Modules.Battle.Vo.SkillVo
local function compFunc(s1, s2)
    if s1 ~= nil and s2 ~= nil then
        return s1.skillInfo.priority > s2.skillInfo.priority
    else
        return false
    end
end

function ReportBattleUnit:IsDead()
    return self.battleUnitVo.curHp == 0
end

function ReportBattleUnit:AutoSelectSkill()
    self.canUseList:Clear()
    for i = 1, #self.skills do
        local skill = self.skills[i] ---@type Game.Modules.Battle.Vo.SkillVo
        if skill.isNecessary then --必然触发的技能
            self.canUseList:Clear()
            self.canUseList:Add(skill)
            break;
        else
            if skill.skillInfo.skillType == SkillType.Passive then
                -- do nothing
            elseif skill.skillInfo.cd == 0 or skill.startTime == 0 or Time.time - skill.startTime > skill.skillInfo.cd then
                if skill.skillInfo.triggerCondition == SkillTriggerCondition.CD then -- CD
                    self.canUseList:Add(skill)
                elseif skill.skillInfo.triggerCondition == SkillTriggerCondition.FullTp then -- 满怒气
                    if self.battleUnitVo.curTp >= self.battleUnitVo.maxTp then
                        self.canUseList:Add(skill)
                    end
                elseif skill.skillInfo.triggerCondition == SkillTriggerCondition.Prob then -- 触发概率
                    local prob = math.random()
                    if prob <= tonumber(skill.skillInfo.triggerConditionParam) then
                        self.canUseList:Add(skill)
                    end
                end
            end
        end
    end
    if self.canUseList:Size() > 0 then
        self.canUseList:Sort(compFunc)
        self.canUseList[1].isNecessary = false
        self.currSelectedSkill = self.canUseList[1]
        --self.battleUnit:_debug(self.currSelectedSkill.id)
        --这里暂时默认这个技能肯定被触发了,做一些初始操作
        self.currTargetAttackNum = self.currTargetAttackNum + 1
    else
        --self.avatar:_debugError("there is no skill can use!!")
        self.currSelectedSkill = nil
    end
    return self.currSelectedSkill
end

return ReportBattleUnit