---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2020/7/5 1:37
---

---@class Game.Modules.Battle.Report.ReportUtils
local ReportUtils = {}

--获取可以攻击目标的点
---@param gridSelectType GridSelectType
---@param attacker Game.Modules.Battle.Report.ReportBattleUnit
---@return Camp
function ReportUtils.GetTargetCamp(gridSelectType, attacker)
    local targetCamp
    if string.find(gridSelectType, "Friend") then
        targetCamp = attacker.battleUnitVo.camp --友方阵营
    else
        targetCamp = ReportUtils.GetOpposeCamp(attacker.battleUnitVo.camp) --对立阵营
    end
    return targetCamp
end

--获取对立阵营
---@param camp Camp
---@return Camp
function ReportUtils.GetOpposeCamp(camp)
    if camp == nil then
        logError("Camp is nil")
    end
    if camp == Camp.Atk then
        return Camp.Def
    else
        return Camp.Atk
    end
end

--获取可以攻击目标的点
---@param gridSelectType GridSelectType
---@param attacker Game.Modules.Battle.Report.ReportBattleUnit
---@return table<number, number>
function ReportUtils.GetTargetCampAndGrids(gridSelectType, targetCamp, attacker)
    local selectGrids
    local curColIndexs = LayoutIndex2Col[attacker.layoutIndex]
    local firstTarget = attacker.context.layout:GetFirstGridByIndexs(targetCamp, curColIndexs)
    if not firstTarget then
        firstTarget = attacker.context.layout:GetFirstGrid(targetCamp)
    end
    if gridSelectType == GridSelectType.Current then
        selectGrids = {}
        if firstTarget then
            table.insert(selectGrids, firstTarget.layoutIndex)
        end
    elseif gridSelectType == GridSelectType.Col then
        selectGrids = curColIndexs
    elseif gridSelectType == GridSelectType.Row then
        if firstTarget then
            selectGrids = LayoutIndex2Row[firstTarget.layoutIndex]
        end
    elseif gridSelectType == GridSelectType.All then
        selectGrids = LayoutMapAll
    elseif gridSelectType == GridSelectType.Friend_All then
        selectGrids = LayoutMapAll
    elseif gridSelectType == GridSelectType.Friend_Lowest then
        selectGrids = LayoutMapAll
    else
        logError("unknown select type " .. gridSelectType)
    end
    if not selectGrids then
        logError("select grid error:" .. gridSelectType)
    elseif #selectGrids == 0 then
        logError("select grid empty:" .. gridSelectType)
    end
    return selectGrids
end

return ReportUtils