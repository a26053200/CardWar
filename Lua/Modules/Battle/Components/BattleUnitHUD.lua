---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/5/31 0:17
---

local SceneUnitHUD = require('Game.Modules.Battle.Components.SceneUnitHUD')

---@class Game.Modules.Battle.Components.BattleUnitHUD : Game.Modules.Battle.Components.SceneUnitHUD
---@field New fun(avatar:Game.Modules.World.Items.BattleUnit) : Game.Modules.Battle.Components.BattleUnitHUD
---@field hpText UnityEngine.UI.Text
---@field hpMain UnityEngine.UI.Image
---@field hpSub UnityEngine.UI.Image
---@field agMain UnityEngine.UI.Image
---@field agSub UnityEngine.UI.Image
local BattleUnitHUD = class("Game.Modules.Battle.Components.BattleUnitHUD", SceneUnitHUD)

local Offset = Vector3.New(0,110,0)

---@param battleUnit Game.Modules.World.Items.BattleUnit
function BattleUnitHUD:Ctor(battleUnit)
    self.gameObject = battleUnit.context.pool:CreateObjectByPool(Prefabs.BattleUnitHUD)
    BattleUnitHUD.super.Ctor(self, battleUnit)
    Layers.SetLayer(self.gameObject, Layers.UI())
    self.transform:SetParent(self.uiLayer)
    self.transform.localPosition = Vector3.zero
    self.transform.localEulerAngles = Vector3.zero
    self.transform.localScale = Vector3.one
end

function BattleUnitHUD:Init()
    BattleUnitHUD.super.Init(self)
    self.text = self.gameObject:GetText("Text")
    self.text.text = self.battleUnitVo.battleUnitInfo.name
    self.hpBar = self.gameObject:FindChild("HpBar")
    self.agBar = self.gameObject:FindChild("AgBar")
    if self.battleUnitVo.battleUnitInfo.type == BattleUnitType.Monster then
        self.hpMain = self.gameObject:GetImage("HpBar/main")
        self.hpSub = self.gameObject:GetImage("HpBar/sub")
        self.agMain = self.gameObject:GetImage("AgBar/main")
        self.agSub = self.gameObject:GetImage("AgBar/sub")
        self:Update()
    else
        self.hpBar:SetActive(false)
        self.agBar:SetActive(false)
    end
    --self.name = GetText3D(self.gameObject:FindChild("name"))
    --self.hud = Hud.New(self.battleUnit.avatarInfo.name,1)
    --self.hud.transform:SetParent(self.transform)
    --self.hud.transform.gameObject:ResetTransform()
end

function BattleUnitHUD:Update()
    --self.text.text = self.battleItemVo.curHp .. "/" .. self.battleItemVo.maxHp
    if self.battleUnitVo.battleUnitInfo.type == BattleUnitType.Monster then
        local hpPer = Mathf.Max(0, self.battleUnitVo.curHp / self.battleUnitVo.maxHp)
        local agPer = Mathf.Max(0, self.battleUnitVo.curAnger / self.battleUnitVo.maxAnger)
        self.hpMain.fillAmount = hpPer
        self.hpSub.fillAmount = agPer
        self.hpMain.fillAmount = hpPer
        self.agSub.fillAmount = agPer
    end
    if not isnull(self.battleUnit.transform) then
        self.transform.localPosition = self:GetTargetUIPos(Offset)
    end
end

function BattleUnitHUD:Dispose()
    BattleUnitHUD.super.Dispose(self)
    self.battleUnit.context.pool:StoreObject(Prefabs.BattleUnitHUD, self.gameObject)
end

return BattleUnitHUD