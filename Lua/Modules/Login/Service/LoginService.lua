---
--- Generated by Tools
--- Created by zhengnan.
--- DateTime: 2018-06-19-16:04:56
---

local RoleVo = require("Game.Modules.Role.Vo.RoleVo")
local BaseService = require("Game.Core.Ioc.BaseService")
---@class Game.Modules.Login.Service.LoginService : Game.Core.Ioc.BaseService
---@field loginModel Game.Modules.Login.Model.LoginModel
---@field roleModel Game.Modules.Role.Model.RoleModel
local LoginService = class("LoginService", BaseService)
--local Url = "http://127.0.0.1:8081"      --本地测试服
--local Url = "http://192.168.31.149:8081"      --局域网测试服 台式
local Url = "http://192.168.31.174:8081"      --局域网测试服 Mac Book
--local Url = "http://118.31.3.216:8081"    --阿里云服务器

function LoginService:Ctor()
    --nmgr:AddPush(Action.PlayerInfo, handler(self,self.OnPlayerInfo))
end

function LoginService:HttpRegister(username, password, callback)
    nmgr.httpUrl = Url
    self:HttpRequest(Action.LoginRegister, { username, password }, function(response)
        callback(response.data)
    end)
end

function LoginService:HttpLogin(username, password, callback)
    nmgr.httpUrl = Url
    self:HttpRequest(Action.LoginAccount, { username, password }, function(data)
        log("login success! - aid:{0} token:{1}", data.aid, data.token)
        self.loginModel.serverList = data.srvList.list
        self.loginModel.aid = data.aid
        self.loginModel.token = data.token

        local gameServer = self.loginModel.serverList[1]
        nmgr.httpUrl = string.format("http://%s:%s",gameServer.host,gameServer.port)
        self:LoginGameServer(data.aid, data.token, callback)
    end)
end

function LoginService:LoginGameServer(aid, token, callback, failCallback)
    self:HttpRequest(Action.LoginGameServer, { aid, token }, function(data)
        self.loginModel.playerId = data.playerId
        self:EnterGame(callback)

    end, failCallback)
end
--随机获取角色名
function LoginService:FetchRandomName(callback)
    self:HttpRequest(Action.FetchRandomName, { self.loginModel.playerId }, function(data)
        log("角色随机名字:"..data.roleName)
        self:CreateRole(data.roleName, callback)
    end)
end
--创建角色
function LoginService:CreateRole(roleName, callback)
    self:HttpRequest(Action.CreateRole, { self.loginModel.playerId, roleName }, function(data)
        if data.roleInfo ~= nil then
            self:OnRecvRoleInfo(data)
        end
        callback(data)
    end, roleName)
end

function LoginService:EnterGame(callback)
    self:HttpRequest(Action.EnterGame, { self.loginModel.playerId }, function(data)
        if data.roleInfo == nil then--创建角色
            self:FetchRandomName(callback)
        else
            self:OnRecvRoleInfo(data)
            callback(data)
        end
    end)
end

function LoginService:OnRecvRoleInfo(data)
    self.roleModel.roleId = data.roleInfo.id
    self.roleModel.roleInfo = RoleVo.New(data.roleInfo)
    self.roleModel.roleInfo.clientOnlineTime = Time.time
    self.roleModel.roleInfo.clientOnlineRealTime = Time.realtimeSinceStartup
end

---push
--function LoginService:OnPlayerInfo(response)
--    self.loginModel.roleList = response.roleList
--end

return LoginService
