---
--- Generated by Tools
--- Created by zheng.
--- DateTime: 2020-06-17-21:31:19
---

local ArrayCardItem = require("Game.Modules.Array.View.ArrayCardItem")
local BaseMediator = require("Game.Core.Ioc.BaseMediator")
---@class Game.Modules.Array.View.ArrayEditorMdr : Game.Core.Ioc.BaseMediator
---@field arrayModel Game.Modules.Array.Model.ArrayModel
---@field cardModel Game.Modules.Card.Model.CardModel
---@field arrayService Game.Modules.Array.Service.ArrayService
---@field ownerList List | table<number, Game.Modules.Card.Vo.CardVo>
---@field cardList Betel.UI.TableList
---@field selectList List | table<number, Game.Modules.Card.Vo.CardVo>
local ArrayEditorMdr = class("Game.Modules.Array.View.ArrayEditorMdr",BaseMediator)

function ArrayEditorMdr:Ctor()
    ArrayEditorMdr.super.Ctor(self)
    self.layer = UILayer.LAYER_FLOAT
end

function ArrayEditorMdr:OnInit()
    self.selectList = List.New()
    self.ownerList = self.cardModel:SortByStar()

    self:SetCloseBg(self.gameObject:FindChild("Bg"))
    self.cardList = TableList.New(self.gameObject:FindChild("List/ListView"), ArrayCardItem)
    self.cardList:SetData(self.ownerList)
    self.cardList.eventDispatcher:AddEventListener(ListViewEvent.ItemClick, self.onItemClick, self)

    self.selectCardList = TableList.New(self.gameObject:FindChild("ListSelect/ListView"), ArrayCardItem)
    self.selectCardList:SetData(self.selectList)
    self.selectCardList:SetScrollEnable(false)
    self.selectCardList.eventDispatcher:AddEventListener(ListViewEvent.ItemClick,self.onSelectItemClick, self)
end

function ArrayEditorMdr:onItemClick(event, data, index)
    if self.selectList:Size() < 5 and not self.selectList:Contain(data) then
        self.selectList:Add(data)
        self.selectCardList:SetData(self.selectList)
        local item = self.cardList:GetItemRenderByIndex(index) ---@type Game.Modules.Array.View.ArrayCardItem
        item.select = true
        item:UpdateItem(data, index)
    end
end

function ArrayEditorMdr:onSelectItemClick(event, data, index)
    if self.selectList:Contain(data) then
        local item = self.cardList:GetItemRenderByData(data) ---@type Game.Modules.Array.View.ArrayCardItem
        self.selectList:Remove(data)
        self.selectCardList:Refresh()
        if item then
            item.select = false
            item:UpdateItem(data, index)
        end
        --self:CreateDelayedFrameCall(function()
        --    self.selectCardList:SetData(self.selectList)
        --end)
    end
end

return ArrayEditorMdr
